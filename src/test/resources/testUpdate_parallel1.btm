RULE Thread Coordination, Rendezvous 1 Creation
INTERFACE DataChangeCommand
METHOD <init>
AT ENTRY
IF ! isRendezvous ("threads1",50)
DO createRendezvous("threads1",50,true);
createCounter("threads1Cnt");
traceln("rendezvous1 created: " + readCounter("threads1Cnt"));
ENDRULE

RULE Thread Coordination, Rendezvous 1, class 1
# NOTE using just an interface did not work
CLASS HttpClientTest$UpdateChangeCommand
METHOD execute
AT ENTRY
IF TRUE
DO
traceln("rendezvous1: " + incrementCounter("threads1Cnt"));
rendezvous("threads1");
ENDRULE

RULE Thread Coordination, Rendezvous 1, class 2
# NOTE using just an interface did not work
CLASS HttpClientTest$PojoUpdateChangeCommand
METHOD execute
AT ENTRY
IF TRUE
DO
traceln("rendezvous1: " + incrementCounter("threads1Cnt"));
rendezvous("threads1");
ENDRULE

RULE Thread Coordination, Rendezvous 1, class 3
# NOTE using just an interface did not work
CLASS HttpClientTest$DeleteChangeCommand
METHOD execute
AT ENTRY
IF TRUE
DO
traceln("rendezvous1: " + incrementCounter("threads1Cnt"));
rendezvous("threads1");
ENDRULE

RULE Thread Coordination, Rendezvous 1, class 4
# NOTE using just an interface did not work
CLASS HttpClientTest$PojoDeleteChangeCommand
METHOD execute
AT ENTRY
IF TRUE
DO
traceln("rendezvous1: " + incrementCounter("threads1Cnt"));
rendezvous("threads1");
ENDRULE